program allExceptExtension
global
  const m:int64; 
  const n:int64;
  const q:int64; 
  const r:int64;
  
  // test basic program
  proc testAllExpectExtension(copy const a:int64, copy b:int64,
          ref var c:int64, ref var d:int64)
  local
    var decimal:int64;
    var boolean:bool
    
  do
    // test decimal
    decimal init := 321'123654;
    decimal := 123;
    
    // test boolean value
    boolean init := true;
    boolean := false;
    
    // test ifelse
    if boolean then 
      decimal := decimal * 2
    else
      decimal := decimal modE 16
    endif;
    
    // test while
    c := 0;
    d := a;
    
    debugout a;
    debugout b;
    
    while a >= b do
      c := c + 1;
      d := d - b;
      b := b + 1;
      debugout b
    endwhile
  endproc;
  
  proc divTFE(copy const a:int64, copy const b:int64)
  do
     debugout a divT b;
     debugout a divF b;
     debugout a divE b
  endproc;
  
  proc modTFE(copy const a:int64, copy const b:int64)
  do
     debugout a modT b;
     debugout a modF b;
     debugout a modE b
  endproc
  
do
  debugin m init;
  debugin n init;
  call testAllExpectExtension(m, n, q init, r init);
  debugout q;
  debugout r;
    
  call divTFE(1052, 52);
  call modTFE(1052, 52)
endprogram